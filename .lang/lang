#!/usr/bin/env python3.7
import argparse, sys, os, shutil, subprocess, json

def die(*args) :
    print(*args, file=sys.stderr)
    exit(1)

def commit(msg, path=None) :
    if path and subprocess.call(['git', 'add', '--verbose', path]) != 0 :
        die("git: failed to add changes")
    if subprocess.call(['git', 'commit', '-am', msg]) != 0 :
        die("git: failed to commit changes")

def load_meta() :
    if not os.path.exists('meta.json') :
        json.dump(dict(), open('meta.json', 'w'), indent=2)
    return json.load(open('meta.json'))

def save_meta(meta) :
    json.dump(meta, open('meta.json', 'w'), indent=2)

def parse_args() :
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='cmd', required=True)
# add
    parser_add = subparsers.add_parser('add')
    parser_add.add_argument('shortname')
    parser_add.add_argument('name', nargs='?')
# remove
    parser_remove = subparsers.add_parser('remove')
    parser_remove.add_argument('shortname')
    
    return parser.parse_args()

def add_lang(shortname, name) :
    if not name : name = shortname
    meta = load_meta()
    if shortname in meta : 
        die("language '{0}' already exists!".format(shortname))
    meta[shortname] = {'name' : name}
    save_meta(meta)
    shutil.copytree('.template', shortname)
    commit("add language '{0}' : {1}".format(shortname, name), shortname);

def remove_lang(shortname) :
    meta = load_meta()
    if shortname not in meta : 
        die("language '{0}' does not exist!".format(shortname))
    name = meta.pop(shortname)['name']
    save_meta(meta)
    shutil.rmtree(shortname)
    commit("remove language '{0}' : {1}".format(shortname, name));

ns = parse_args()
if ns.cmd == 'add' :
    add_lang(ns.shortname, ns.name)
elif ns.cmd == 'remove' :
    remove_lang(ns.shortname)
